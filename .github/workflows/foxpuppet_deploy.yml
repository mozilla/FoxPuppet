name: Publish to PyPI

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  PYTHON_VERSION: '3.12'

jobs:
  test-and-publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.8.5
          export PATH="$HOME/.local/bin:$PATH"

      - name: Setup Firefox
        id: setup-firefox
        uses: ./.github/actions/setup_firefox/
        with:
          firefox-version: latest

      - name: Verify Firefox Installation
        run: |
          echo Installed Firefox version:
          firefox --version

      - name: Build the Package
        run: poetry build

      - name: Install and Test the Wheel
        run: |
          python -m venv wheel-env
          source wheel-env/bin/activate
          pip install dist/*.whl
          mkdir -p results
          make test
          deactivate

      - name: Upload Wheel Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: wheel-test-results
          path: |
            results/report.html
            results/geckodriver.log
          retention-days: 14

      - name: Install and Test the Tarball
        run: |
          python -m venv tarball-env
          source tarball-env/bin/activate
          pip install dist/*.tar.gz
          pip install pytest pytest-selenium pytest-cov pytest-html
          mkdir -p results
          make test
          deactivate

      - name: Upload Tarball Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tarball-test-results
          path: |
            results/report.html
            results/geckodriver.log
          retention-days: 14

      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package-artifacts
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  create-release:
    name: Create GitHub Release
    needs: test-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: package-artifacts
          path: dist/

      - name: Verify Artifacts
        run: |
          ls -al dist

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${GITHUB_REF_NAME}" dist/*.whl dist/*.tar.gz \
            --title "Release ${GITHUB_REF_NAME}" \
            --notes "Automated release of version ${GITHUB_REF_NAME}"
